name: Scheduled Drift Detection

on:
  schedule:
    - cron: "0 2 * * *"   # run daily at 2 AM
  workflow_dispatch:       # allows manual run as well

permissions:
  id-token: write
  contents: read

env:
    WORKFLOW: driftctl
    NIX_PATH: "nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixos-25.05.tar.gz"

jobs:
  
  drift-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::740527929108:role/github-oidc-for-secure-terraform-pipeline-full-access
          aws-region: us-east-1

      - name: Setup Nix
        uses: cachix/install-nix-action@v31

      - name: Run Driftctl scan
        run: |
          nix-shell shell.nix --run "driftctl scan \
            --from=tfstate+s3://secure-terraform-prod-terraform-state/infra/terraform.tfstate \
            --to aws+tf \
            --output json://tf-drift-report.json" || true

      - name: Upload drift report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: drift-report-driftctl-${{ github.run_id }}
          path: tf-drift-report.json

  
  auto_remediation:
    runs-on: ubuntu-latest 
    needs: 
      - drift-check
    env:
      TF_VAR_bucket_name: ${{ secrets.TF_VAR_BUCKET_NAME }}
      TF_VAR_aws_region: ${{ secrets.TF_VAR_AWS_REGION }}
      TF_VAR_enable_versioning: ${{ secrets.TF_VAR_ENABLE_VERSIONING }}
      TF_VAR_env: ${{ secrets.TF_VAR_ENV }}
      TF_VAR_tags: ${{ secrets.TF_VAR_TAGS }}
      TF_VAR_localstack_enabled: true 

    steps:
      - name: Checkout
        uses: actions/checkout@v5 

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::740527929108:role/github-oidc-for-secure-terraform-pipeline-full-access
          aws-region: us-east-1

      - name: Cache Terraform 
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache 
            .terraform 
          key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf') }}-driftctl
          restore-keys: |
            terraform-${{ runner.os }}-driftctl   

      - name: Setup Nix 
        uses: cachix/install-nix-action@v31 

      - name: Terraform Init 
        run: |
          nix-shell shell.nix --run '
            cd infrastructure &&
            terraform init -reconfigure -backend-config=envs/aws.backend
          '

      - name: Terraform Plan 
        run: |
          nix-shell shell.nix --run '
            cd infrastructure &&
            terraform plan --refresh-only -out=tfplan 
          '
      
      - name: Terraform Plan json
        run: |
          nix-shell shell.nix --run '
            cd infrastructure &&
            terraform show -json tfplan > tfplan.json
          '

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-driftctl-${{ github.run_id }}
          path: |
            infrastructure/tfplan
            infrastructure/tfplan.json

      - name: Manual Approval 
        uses: trstringer/manual-approval@v1.11.0
        with:
          approvers: 'shilucloud'
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Terraform Apply"
          secret: ${{ secrets.PAT_TOKEN }}

      - name: Terraform Apply 
        run: |
          nix-shell shell.nix --run '
            cd infrastructure &&
            terraform apply "tfplan" --auto-approve 
          '