name: Terraform CD 

on:
  workflow_dispatch:
  push: 
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy_to_aws:
    runs-on: ubuntu-latest 
    env:
      IS_CD: true 
      TF_VAR_bucket_name: ${{ secrets.TF_VAR_BUCKET_NAME }}
      TF_VAR_aws_region: ${{ secrets.TF_VAR_AWS_REGION }}
      TF_VAR_enable_versioning: ${{ secrets.TF_VAR_ENABLE_VERSIONING }}
      TF_VAR_env: ${{ secrets.TF_VAR_ENV }}
      TF_VAR_aws_tags: ${{ secrets.TF_VAR_TAGS }}
      TF_VAR_localstack_enabled: true
      NIX_PATH: "nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixos-25.05.tar.gz"
      
    steps:
      - name: Checkout 
        uses: actions/checkout@v5

        # Setup Nix
      - name: Setup Nix
        uses: cachix/install-nix-action@v31

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::740527929108:role/github-oidc-for-secure-terraform-pipeline-s3-access
          aws-region: us-east-1

      # install Nix 
      - name: Install Nix
        uses: 

      # 1. Nix cache
      - name: Cache Nix store & profile
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/nix
            ~/.nix-profile
          key: nix-cache-${{ runner.os }}-${{ hashFiles('**/shell.nix') }}
          restore-keys: |
            nix-cache-${{ runner.os }}-

      # 2. Terraform cache
      - name: Cache Terraform 
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache 
            .terraform 
          key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf') }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            terraform-${{ runner.os }}-

      - name: Terraform Init 
        run: |
          nix-shell shell.nix --run '
            cd infrastructure &&
            terraform init -reconfigure -backend-config=envs/aws.backend
          '
      
      - name: Terraform Plan 
        run: | 
          nix-shell shell.nix --run '
            cd infrastructure &&
            terraform plan -out=tfplan | tee terraform-plan.txt
          '

      - name: Terraform Plan Json 
        run: |
          nix-shell shell.nix --run '
            cd infrastructure && 
            terraform show -json tfplan > tfplan.json 
          '

      - name: Upload Terraform Plan 
        uses: actions/upload-artifact@v4 
        with:
          name: terraform-plan 
          path: |
            infrastructure/tfplan 
            infrastructure/terraform-plan.txt 
            infrastructure/tfplan.json 

      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: shilucloud
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Terraform Apply"
          issue-body: "Please approve or deny the deployment."

      - name: Terraform Apply 
        run: |
          nix-shell shell.nix --run '
            cd infrastructure && 
            terraform apply --auto-approve  
          '