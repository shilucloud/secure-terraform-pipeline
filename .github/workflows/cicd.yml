name: Terraform CI/CD

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  terraform_pipeline:
    runs-on: ubuntu-latest
    env:
      IS_CI: true
      TF_IN_AUTOMATION: true
      TF_CLI_ARGS: "-no-color"
      NIX_PATH: "nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixos-25.05.tar.gz"
      LOCALSTACK_AUTH_TOKEN: ${{ secrets.LOCALSTACK_AUTH_TOKEN }}
      LOCALSTACK_ENABLED: true 

    steps:
      - uses: actions/checkout@v4

      # Cache Terraform & Go modules
      - name: Cache Terraform & Go
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
            ~/go/pkg/mod
          key: terraform-go-${{ runner.os }}-${{ hashFiles('**/*.tf') }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            terraform-go-${{ runner.os }}-

      # Setup Nix once
      - name: Setup Nix
        uses: cachix/install-nix-action@v22

      - name: Setup Provider.tf 
        run: |
          cat > infrastructure/provider.tf <<EOF
            provider "aws" {
              region = var.aws_region
            EOF

            if [ "$LOCALSTACK_ENABLED" = "true" ]; then
              cat >> infrastructure/provider.tf <<'EOP'
              access_key                  = "test"
              secret_key                  = "test"
              s3_force_path_style         = true
              skip_credentials_validation = true
              skip_requesting_account_id  = true
              endpoints = {
                s3  = "http://localhost:4566"
                sts = "http://localhost:4566"
              }
            EOP
            fi

            # Always close the provider block
            echo "}" >> infrastructure/provider.tf


      # Terraform Fmt & Validate
      - name: Terraform Lint & Validate
        run: nix-shell shell.nix --pure --run "terraform fmt -check -recursive && terraform validate"

      # Setup Provider for LocalStack
      - name: Setup LocalStack Provider
        run: cat providers/localstack-provider.tf >> provider.tf

      # Start LocalStack (single instance for all steps)
      - name: Start LocalStack
        run: docker compose -f localstack/localstack-compose.yml up -d

      # Wait for LocalStack readiness
      - name: Wait for LocalStack
        run: |
          until curl -s http://localhost:4566/health | grep '"s3": "running"'; do
            echo "Waiting for LocalStack..."
            sleep 2
          done

      # Terraform Init & Plan
      - name: Terraform Init
        run: nix-shell shell.nix --pure --run "terraform init -backend-config='bucket=${{ secrets.TFSTATE_BUCKET }}' -backend-config='key=global/terraform.tfstate' -backend-config='dynamodb_table=${{ secrets.TFSTATE_LOCK_TABLE }}'"

      - name: Terraform Plan
        run: nix-shell shell.nix --pure --run "terraform plan -out=tfplan | tee terraform-plan.txt"

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: |
            tfplan
            terraform-plan.txt

      # Security scans
      - name: Run Security Scans
        run: nix-shell shell.nix --pure --run "checkov -d ./terraform -o json > checkov-report.json && terraform show -json | conftest test --output=json > conftest-report.json"

      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            checkov-report.json
            conftest-report.json

      # Terratest
      - name: Run Terratest
        run: nix-shell shell.nix --pure --run "go test ./test -v -timeout 30m | tee terratest-results.txt"

      - name: Upload Terratest Results
        uses: actions/upload-artifact@v4
        with:
          name: terratest-results
          path: terratest-results.txt

      # PR comment
      - name: PR Comment with Summary
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform-summary
          message: |
            ## ✅ Terraform Validation Summary

            - **Lint & Validate:** Passed  
            - **Checkov Security Scan:** See artifact (`checkov-report.json`)  
            - **OPA/Conftest Policies:** See artifact (`conftest-report.json`)  
            - **Terratest Results:** See artifact (`terratest-results.txt`)  
            - **Terraform Plan:** Uploaded (`terraform-plan.txt`)  

            ⚠️ Please review reports before merging.
