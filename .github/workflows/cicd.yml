name: Terraform CI/CD

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  # --- Static Checks (parallelized) ---
  lint_validate:
    runs-on: ubuntu-latest
    env:
      IS_CI: true
      TF_IN_AUTOMATION: true
      TF_CLI_ARGS: "-no-color"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Nix
        uses: cachix/install-nix-action@v22

      - name: Terraform Fmt
        run: nix-shell shell.nix --pure --run "terraform fmt -check -recursive"

      - name: Terraform Validate
        run: nix-shell shell.nix --pure --run "terraform validate"
  
  terraform_plan:
    runs-on: ubuntu-latest
    needs: [lint_validate]
    env:
      IS_CI: true
      TF_IN_AUTOMATION: true
      TF_CLI_ARGS: "-no-color"
      LOCALSTACK_AUTH_TOKEN: ${{ secrets.LOCALSTACK_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Nix
        uses: cachix/install-nix-action@v22

      - name: Cache Terraform
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
          key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf') }}

      - name: Setup Provider file for LocalStack
        run: |
          cat providers/localstack-provider.tf >> provider.tf 

      - name: Starting LocalStack 
        run: |
          docker compose -f localstack/localstack-compose.yml up -d

      - name: Terraform Init
        run: nix-shell shell.nix --pure --run "terraform init -backend-config='bucket=${{ secrets.TFSTATE_BUCKET }}' -backend-config='key=global/terraform.tfstate' -backend-config='dynamodb_table=${{ secrets.TFSTATE_LOCK_TABLE }}'"

      - name: Terraform Plan
        run: nix-shell shell.nix --pure --run "terraform plan -out=tfplan | tee terraform-plan.txt"

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: |
            tfplan
            terraform-plan.txt


  security_scan:
    runs-on: ubuntu-latest
    needs: [terraform_plan]
    env:
      IS_CI: true
    steps:
      - uses: actions/checkout@v4

      - name: Setup Nix
        uses: cachix/install-nix-action@v22

      - name: Download tfplan
        uses: actions/download-artifact@v4 
        with:
          name: tfplan-artifact
          path: .

      - name: Run Checkov
        run: nix-shell shell.nix --pure --run "checkov -d ./infrastructure -o json > checkov-report.json"

      - name: Conftest Policy Check
        run: nix-shell shell.nix --pure --run "terraform show -json | conftest test --output=json > conftest-report.json"

      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            checkov-report.json
            conftest-report.json

  terratest:
    runs-on: ubuntu-latest
    needs: [security_scan]
    env:
      IS_CI: true
    steps:
      - uses: actions/checkout@v4

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Nix
        uses: cachix/install-nix-action@v22

      - name: Setup Provider file for LocalStack
        run: |
          cat providers/localstack-provider.tf >> provider.tf 

      - name: Starting LocalStack 
        run: |
          docker compose -f localstack/localstack-compose.yml up -d

      - name: Run Terratest
        run: nix-shell shell.nix --pure --run "go test ./test -v -timeout 30m | tee terratest-results.txt"

      - name: Upload Terratest Results
        uses: actions/upload-artifact@v4
        with:
          name: terratest-results
          path: terratest-results.txt

  creating_pr:
    runs-on: ubuntu-latest
    needs: [security_scan, terratest]
    steps:
      - name: PR Comment with Summary
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform-summary
          message: |
            ## ✅ Terraform Validation Summary

            - **Lint & Validate:** Passed  
            - **Checkov Security Scan:** See artifact (`checkov-report.json`)  
            - **OPA/Conftest Policies:** See artifact (`conftest-report.json`)  
            - **Terratest Results:** See artifact (`terratest-results.txt`)  
            - **Terraform Plan:** Uploaded (`terraform-plan.txt`)  

            ⚠️ Please review reports before merging.

  