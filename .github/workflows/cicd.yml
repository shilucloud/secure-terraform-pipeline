name: Terraform CI/CD

permissions:
  contents: read
  pull-requests: write

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  terraform_pipeline:
    runs-on: ubuntu-latest

    services:
      localstack:
        image: localstack/localstack-pro:latest
        ports:
          - 4566:4566
        env:
          SERVICES: s3,sts
          DEBUG: 1
          LOCALSTACK_AUTH_TOKEN: ${{ secrets.LOCALSTACK_AUTH_TOKEN }}

    env:
      IS_CI: true
      TF_IN_AUTOMATION: true
      TF_CLI_ARGS: "-no-color"
      NIX_PATH: "nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixos-25.05.tar.gz"
      LOCALSTACK_AUTH_TOKEN: ${{ secrets.LOCALSTACK_AUTH_TOKEN }}
      TF_VAR_localstack_enabled: true
      AWS_ENDPOINT_URL: "http://localhost:4566"
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: us-east-1
      TF_VAR_bucket_name: ${{ secrets.TF_VAR_BUCKET_NAME }}
      TF_VAR_aws_region: ${{ secrets.TF_VAR_AWS_REGION }}
      TF_VAR_enable_versioning: ${{ secrets.TF_VAR_ENABLE_VERSIONING }}
      TF_VAR_env: ${{ secrets.TF_VAR_ENV }}
      TF_VAR_aws_tags: ${{ secrets.TF_VAR_TAGS }}

    steps:
      - uses: actions/checkout@v5

      # Cache Terraform & Go modules
      - name: Cache Terraform & Go
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
            ~/go/pkg/mod
          key: terraform-go-${{ runner.os }}-${{ hashFiles('**/*.tf') }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            terraform-go-${{ runner.os }}-

      # Setup Nix
      - name: Setup Nix
        uses: cachix/install-nix-action@v31

      # Create LocalStack S3 backend bucket
      - name: Creating Backend Bucket 
        run: aws --endpoint-url=http://localhost:4566 s3 mb s3://localstack-terraform-state

      # Terraform Lint
      - name: Terraform Lint
        run: nix-shell shell.nix --run "cd infrastructure && tflocal fmt -check -recursive"

      # Terraform Init
      - name: Terraform Init (LocalStack)
        run: |
          nix-shell shell.nix --run '
            cd infrastructure &&
            tflocal init -reconfigure -backend-config=envs/localstack.backend
          '

      # Terraform Plan
      - name: Terraform Plan
        run: |
          nix-shell shell.nix --run '
            cd infrastructure &&
            tflocal plan -out=tfplan | tee terraform-plan.txt
          '

      # Convert Plan to JSON
      - name: Terraform Plan JSON
        run: |
          nix-shell shell.nix --run '
            cd infrastructure &&
            tflocal show -json tfplan > tfplan.json
          '

      # Upload Terraform Plan artifacts
      - name: Upload Terraform Plan
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: |
            infrastructure/tfplan
            infrastructure/terraform-plan.txt
            infrastructure/tfplan.json

      # Debugging stage
      - name: Debug Terraform Files
        if: always()
        run: |
          cat infrastructure/terraform.tf || true
          cat infrastructure/variables.tf || true
          cat infrastructure/provider.tf || true
          cat infrastructure/main.tf || true
          cat infrastructure/outputs.tf || true

      # ---------------------------------
      # 🛡️ Security Scans
      # ---------------------------------

      - name: Run Checkov Scan
        id: checkov
        continue-on-error: true
        run: |
          nix-shell shell.nix --run "
            checkov -f ./infrastructure/tfplan.json -o json > checkov-report.json
          "

      - name: Upload Checkov Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkov-report
          path: checkov-report.json

      - name: Run Conftest Scan
        id: conftest
        continue-on-error: true
        run: |
          nix-shell shell.nix --run "
            conftest test infrastructure/tfplan.json --output=json --no-fail > conftest-report.json
          "

      - name: Upload Conftest Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: conftest-report
          path: conftest-report.json

      # ---------------------------------
      # 🧪 Terratest
      # ---------------------------------
      - name: Run Terratest
        run: |
          nix-shell shell.nix --run '
            cd test &&
            go test ./ -v -timeout 30m | tee terratest-results.txt
          '

      - name: Upload Terratest Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terratest-results
          path: test/terratest-results.txt

      # ---------------------------------
      # 💬 PR Summary Comment
      # ---------------------------------
      - name: PR Comment with Summary
        if: always() && github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform-summary
          message: |
            ## ✅ Terraform CI/CD Summary

            - **Lint & Init:** Completed  
            - **Checkov Security Scan:** [Artifact → `checkov-report.json`]  
            - **Conftest OPA Policies:** [Artifact → `conftest-report.json`]  
            - **Terratest Results:** [Artifact → `terratest-results.txt`]  
            - **Terraform Plan Files:** [Artifact → `terraform-plan.txt`]  

            ⚠️ Please review the uploaded artifacts before merging.
